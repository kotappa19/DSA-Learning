class Solution {
    public int[] asteroidCollision(int[] arr) {
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i < arr.length; i++) {
            // asteroids collide if first one move right and second one move left
            while(!st.isEmpty() && st.peek() > 0 && arr[i] < 0) {
                int diff = arr[i] + st.peek();
                // diff < 0 means arr[i] is greater
                if(diff < 0) {
                    st.pop();
                } 
                // diff > 0 means st.peek() is greater
                else if(diff > 0) {
                    // arr[i] = 0 means destroying it
                    arr[i] = 0;
                } 
                // both are equal
                else {
                    st.pop();
                    arr[i] = 0;
                }
            }
            // if arr[i] is not destroyed already then only add it
            if(arr[i] != 0) {
                st.push(arr[i]);
            }
        }

        // store result in array
        int ans[] = new int[st.size()];
        int k = ans.length-1;
        while(!st.isEmpty()) {
            ans[k--] = st.pop();
        }
        return ans;
    }
}
