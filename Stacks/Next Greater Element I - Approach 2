class Solution { // Time: O(n), Space: O(n)
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int ans[] = new int[nums1.length];
        Stack<Integer> st = new Stack<>();
        HashMap<Integer, Integer> map = new HashMap<>();
        int n1 = nums1.length;
        int n2 = nums2.length;

        for(int i = n2-1; i >= 0; i--) {
            // remove elements smaller or equal to nums2[i], so we can get 
            // next greater element
            while(!st.isEmpty() && st.peek() <= nums2[i]) {
                st.pop();
            }
            // store in map element and its next greater element
            if(!st.isEmpty()) {
                map.put(nums2[i], st.peek());
            }
            st.push(nums2[i]);
        }
        
        // check for nums1 next greater element
        for(int i = 0; i < n1; i++) {
            ans[i] = map.getOrDefault(nums1[i], -1);
        }
        return ans;
    }
}
