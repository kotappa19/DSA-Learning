/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution { // Time O(n), Space O(1)
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next == null && n == 1) return null;
        // calculate size
        int size = 0;
        ListNode fast = head;
        while(fast != null && fast.next != null) {
            size += 2;
            fast = fast.next.next;
        }
        // for odd number of nodes
        if(fast != null) {
            size += 1;
        }

        int len = size-n;
        // delete first node
        if(len == 0) {
            return head.next;
        }
        // delete in the middle or end
        ListNode curr = head;
        ListNode prev = head;
        int i = 0;
        while(i < len) {
            prev = curr;
            curr = curr.next;
            i += 1;
        }
        prev.next = curr.next;
        curr.next = null;
        return head;
    }
}
