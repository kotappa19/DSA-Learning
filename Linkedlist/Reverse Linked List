/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) {
            return head;
        } else if(head.next.next == null) {
            ListNode temp = head.next;
            temp.next = head;
            head.next = null;
            return temp;
        } else {
            // take three pointers and point the link of curr to prev
            // then move all the three pointers one step forward
            ListNode prev = null;
            ListNode curr = head;
            ListNode latest = head.next;
            while(curr != null) {
                curr.next = prev;
                prev = curr;
                curr = latest;
                if(latest != null) {
                    latest = latest.next;
                }
            }
            return prev;
        }
    }
}
