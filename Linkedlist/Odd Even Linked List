/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution { // Time O(n), Space O(1)
    public ListNode oddEvenList(ListNode head) { 
        if(head == null || head.next == null) return head;
        // take two pointers odd and even and increment both of them 
        // take another pointer as even start.
        ListNode odd = head;
        ListNode even = head.next;
        ListNode evenStart = head.next;
        while(odd.next != null && even.next != null) {
            odd.next = even.next;
            odd = even.next;
            even.next = odd.next;
            even = odd.next;
        }
        // merge the odd end with even start
        odd.next = evenStart;
        return head;
    }
}
